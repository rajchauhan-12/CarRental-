pipeline {
    agent {
        label 'docker-agent' // Matches the label in your Docker template
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    // Build inside a Maven container
                    docker.image('maven:3.8.6-jdk-11').inside('-v $HOME/.m2:/root/.m2') {
                        sh 'mvn clean package'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Run tests in same Maven container
                    docker.image('maven:3.8.6-jdk-11').inside('-v $HOME/.m2:/root/.m2') {
                        sh 'mvn test'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Build Docker image
                    docker.build("carrental-app:latest")
                    
                    // Run the application container
                    docker.image('carrental-app:latest').run('-p 3000:3000 --name carrental')
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed - cleaning up'
            script {
                // Clean up containers
                sh 'docker stop carrental || true'
                sh 'docker rm carrental || true'
            }
        }
    }
}
